This system is deployed on our own computer, but it needs us to keep the personal computer on power to maintain the service. In future, we can deploy the system on some cloud platform like Amazon Web Services to keep the stability of our service.

This system supports limited traffic for now. We only test our project with small number of access. If there’s hundreds of thousands of users access to our system in the same time, the system may crash. In future, we can expand the system to support large scale of traffic.

Angular.js is a popular javascript framework that allows the system to work using REST api calls. So, if the system were to use Angular.js then the dependency on the front-end server is removed and the whole system can function just using the backend system. This system distributes the processing over the the client side and allows for the server to be simplified. This is important when considering the scalability of the server. Server which does minimal processing is easily scalable versus a server which does a lot of processing. So, it’s always a good idea to reduce the processing on the server and offset some of the processing to the frontend instead.

Stress testing a system is crucial to have a good idea of the load the system can take and stress testing will provide a lot of information of where the system might be suffering from a bottleneck. JMeter or artillery can be used to benchmark each tier separately and this will help us in establishing the bottlenecks of the systems. once we have benchmarks of one server than its easier to calculate how many users the system will accomodate and to establish the growth path and at which point its necessary to add more servers.
